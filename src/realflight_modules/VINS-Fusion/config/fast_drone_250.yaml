%YAML:1.0

#common parameters
#support: 1 imu 1 cam; 1 imu 2 cam: 2 cam; 
imu: 1         
num_of_cam: 2


imu_topic: "/mavros/imu/data_raw"

# only for down cam
# image0_topic: "/usb_cam/image_raw"

image0_topic: "/camera/infra1/image_rect_raw"
image1_topic: "/camera/infra2/image_rect_raw"




output_path: "/home/orangepi/vins_output"

# only for down cam
# cam0_calib: "down.yaml"

cam0_calib: "left.yaml"
cam1_calib: "right.yaml"
image_width: 640
image_height: 480
   

# Extrinsic parameter between IMU and Camera.
estimate_extrinsic: 1   # 0  Have an accurate extrinsic parameters. We will trust the following imu^R_cam, imu^T_cam, don't change it.
                        # 1  Have an initial guess about extrinsic parameters. We will optimize around your initial guess.

# body_T_cam0: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [-0.00756581, -0.0183311,  0.99980334,  0.09932286,
#          -0.99975213, -0.02079717, -0.00794673,  0.02938157,
#           0.02093876, -0.99961565, -0.01816928,  0.03057558,
#           0.        ,  0.        ,  0.        ,  1.        ]

# body_T_cam1: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [-0.00663048, -0.01876528,  0.99980193,  0.09896326,
#          -0.99975836, -0.02083095 ,-0.00702117 ,-0.02005999,
#          0.02095858 ,-0.99960689 ,-0.01862262 , 0.03159999,
#          0.         , 0.          ,0.         , 1.        ]

# body_T_cam0: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [ -3.0706311490405813e-02, -2.7789135131850853e-02,
#        9.9914207518414411e-01, 7.5799549072372574e-02,
#        -9.9948567113401632e-01, -8.3945847445021649e-03,
#        -3.0950349670921171e-02, 1.6069914827645904e-02,
#        9.2474662713143366e-03, -9.9957855865139034e-01,
#        -2.7517075643494371e-02, 2.7008590852272241e-02, 0., 0., 0., 1. ]
# body_T_cam1: !!opencv-matrix
#    rows: 4
#    cols: 4
#    dt: d
#    data: [ -3.1378773489098455e-02, -2.8020274758432297e-02,
#        9.9911472653383615e-01, 7.4794214579577162e-02,
#        -9.9946328544093255e-01, -8.5294678496257159e-03,
#        -3.1628930329994996e-02, -3.0357113051897911e-02,
#        9.4081682562193684e-03, -9.9957096415445390e-01,
#        -2.7737591629384717e-02, 2.7099214256941031e-02, 0., 0., 0., 1. ]
body_T_cam0: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ -3.0593485965077605e-02, -2.7835412504346617e-02,
       9.9914424805791546e-01, 7.1939617374380926e-02,
       -9.9948801118773989e-01, -8.5165246851557352e-03,
       -3.0841275901999740e-02, 2.0541674953875513e-02,
       9.3677162895092463e-03, -9.9957623952252883e-01,
       -2.7560610906133043e-02, 2.3494636388308381e-02, 0., 0., 0., 1. ]
body_T_cam1: !!opencv-matrix
   rows: 4
   cols: 4
   dt: d
   data: [ -3.1583080542801234e-02, -2.8117308338217625e-02,
       9.9910556298883701e-01, 6.9256294012339945e-02,
       -9.9945607205822928e-01, -8.6030161167995889e-03,
       -3.1836270818518773e-02, -2.7694480510413785e-02,
       9.4904715037202932e-03, -9.9956760906179232e-01,
       -2.7830304797637373e-02, 2.4121439883388288e-02, 0., 0., 0., 1. ]

#Multiple thread support
multiple_thread: 1

#feature traker paprameters
max_cnt: 300            # max feature number in feature tracking
min_dist: 30            # min distance between two features 
freq: 10                # frequence (Hz) of publish tracking result. At least 10Hz for good estimation. If set 0, the frequence will be same as raw image 
F_threshold: 1.0        # ransac threshold (pixel)
show_track: 1           # publish tracking image as topic
flow_back: 1            # perform forward and backward optical flow to improve feature tracking accuracy

#optimization parameters
max_solver_time: 0.04  # max solver itration time (ms), to guarantee real time
max_num_iterations: 8   # max solver itrations, to guarantee real time
keyframe_parallax: 10.0 # keyframe selection threshold (pixel)

#imu parameters       The more accurate parameters you provide, the better performance
# acc_n: 0.372956309          # accelerometer measurement noise standard deviation. #0.2   0.04
# gyr_n: 0.079050862         # gyroscope measurement noise standard deviation.     #0.05  0.004
# acc_w: 0.008672468         # accelerometer bias random work noise standard deviation.  #0.002
# gyr_w: 0.000535742       # gyroscope bias random work noise standard deviation.     #4.0e-5
# g_norm: 9.805         # gravity magnitude

acc_n: 0.372956309          # accelerometer measurement noise standard deviation. #0.2   0.04
gyr_n: 0.079050862         # gyroscope measurement noise standard deviation.     #0.05  0.004
acc_w: 0.008672468         # accelerometer bias random work noise standard deviation.  #0.002
gyr_w: 0.000535742       # gyroscope bias random work noise standard deviation.     #4.0e-5
g_norm: 9.805         # gravity magnitude

#unsynchronization parameters
estimate_td: 1                      # online estimate time offset between camera and imu
td: 0.000173887                        # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

# only for down cam
# td: -0.0013487025267115799                        # initial value of time offset. unit: s. readed image clock + td = real image clock (IMU clock)

#loop closure parameters
load_previous_pose_graph: 0        # load and reuse previous pose graph; load from 'pose_graph_save_path'
pose_graph_save_path: "/home/orangepi/vins_output/pose_graph/" # save and load path
save_image: 1                   # save image in pose graph for visualization prupose; you can close this function by setting 0 

